<controls:BaseUserControl x:Class="CodeReader.Scripts.View.Controls.CodeTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"    
             xmlns:conv="clr-namespace:CodeReader.Scripts.Converters"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:model="clr-namespace:CodeReader.Scripts"
             xmlns:behav="clr-namespace:CodeReader.Scripts.Behaviors"
             xmlns:local="clr-namespace:CodeReader"
             xmlns:controls="clr-namespace:CodeReader.Scripts.View.Controls"
             xmlns:dd="urn:gong-wpf-dragdrop"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             FontFamily="{StaticResource RegularFont}"
             x:Name="CodeTreeControl">
    <!--#region UserControl Resources-->
    <UserControl.Resources>
        <!--#region MenuItem Headers-->
        
        <!--#endregion-->
        
        <!--#region CodeTree ContextMenu-->
        <ContextMenu FontFamily="{StaticResource RegularFont}"
                     x:Key="TreeItemContextMenu" MinWidth="170">
            <!--#region ContextMenu Resources-->
            <ContextMenu.Resources>
                <!--#region Base MenuItem Style-->
                <Style TargetType="controls:KeyBindedMenuItem" 
                       BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="DataContext" Value="{Binding  Source={x:Reference mainGrid},
                        Path=DataContext}"/>
                    <Setter Property="IsEnabled" Value="{Binding IsDefaultState,UpdateSourceTrigger=PropertyChanged}"/>
                    <Setter Property="Width" Value="200"/>
                </Style>
                <!--#endregion-->
            </ContextMenu.Resources>
            <!--#endregion-->
            <!--#region Open MenuItem-->
            <controls:KeyBindedMenuItem Click="OpenMenuItem_Click"
                                        MainText="Open" IsEnabled="True"/>
            <!--#endregion-->
            <!--#region Open as Root MenuItem-->
            <controls:KeyBindedMenuItem ClickCommand="{Binding OpenAsRootCommand}"
                                        MainText="Open as root"
                                        TipText="Ctrl+O"/>
            <!--#endregion-->
            <!--#region AddChild MenuItem-->
            <controls:KeyBindedMenuItem ClickCommand="{Binding AddChildCommand}"
                                        MainText="Add child"
                                        TipText="Ctrl+N"/>
            <!--#endregion-->
            <!--#region Create Relationship MenuItem-->
            <controls:KeyBindedMenuItem IsEnabled="True" 
                                        DataContext="{Binding Source={x:Reference mainGrid},
                        Path=DataContext, UpdateSourceTrigger=PropertyChanged}"
                                        ClickCommand="{Binding UpdateRelationshipCommand}">
                <!--#region MenuItem Style-->
                <controls:KeyBindedMenuItem.Style>
                    <Style TargetType="controls:KeyBindedMenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="DataContext" Value="{Binding  Source={x:Reference mainGrid},
                        Path=DataContext, UpdateSourceTrigger=PropertyChanged}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDefaultState}"
                                         Value="True">
                                <Setter Property="MainForeground" Value="White"/>
                                <Setter Property="MainText" Value="New relationship"/>
                                <Setter Property="TipText" Value="Ctrl+R"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsDefaultState}"
                                         Value="False">
                                <Setter Property="MainText" Value="Cancel operation"/>
                                <Setter Property="TipText" Value="Esc"/>
                                <Setter Property="MainForeground" Value="Red"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </controls:KeyBindedMenuItem.Style>
                <!--#endregion-->
            </controls:KeyBindedMenuItem>
            <!--#endregion-->
            <!--#region Rename MenuItem-->
            <MenuItem>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding RenameCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <MenuItem.Header>
                    <Grid>
                        <TextBlock Text="Rename" Style="{DynamicResource MainTextStyle}"/>
                        <TextBlock Text="F2" Style="{DynamicResource TipTBStyle}"/>
                    </Grid>
                </MenuItem.Header>
            </MenuItem>
            <!--#endregion-->
            <!--#region Delete MenuItem-->
            <MenuItem>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding DeleteCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <MenuItem.Header>
                    <Grid>
                        <TextBlock Text="Delete">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource MainTextStyle}">
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{StaticResource MenuItemTip}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="Dlt" Style="{DynamicResource TipTBStyle}"/>
                    </Grid>
                </MenuItem.Header>
            </MenuItem>
            <!--#endregion-->
            <!--#region Edit MenuItem-->
            <MenuItem Style="{StaticResource MenuItemWithSubmenu}">
                <MenuItem.Header>
                        <TextBlock Text="Edit" Style="{DynamicResource MainTextStyle}"/>
                </MenuItem.Header>
                <!--#region Cut MenuItem-->
                <MenuItem>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding CutCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <MenuItem.Header>
                        <Grid>
                            <TextBlock Text="Cut" Style="{DynamicResource MainTextStyle}"/>
                            <TextBlock Text="Ctrl+X" Style="{DynamicResource TipTBStyle}"/>
                        </Grid>
                    </MenuItem.Header>
                </MenuItem>
                <!--#endregion-->
                <!--#region Copy MenuItem-->
                <MenuItem>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding CopyCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <MenuItem.Header>
                        <Grid>
                            <TextBlock Text="Copy" Style="{DynamicResource MainTextStyle}"/>
                            <TextBlock Text="Ctrl+C" Style="{DynamicResource TipTBStyle
}"/>
                        </Grid>
                    </MenuItem.Header>
                </MenuItem>
                <!--#endregion-->
                <!--#region Paste MenuItem-->
                <MenuItem>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding PasteCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <MenuItem.Header>
                        <Grid>
                            <TextBlock Text="Paste" Style="{DynamicResource MainTextStyle}"/>
                            <TextBlock Text="Ctrl+V" Style="{DynamicResource TipTBStyle}"/>
                        </Grid>
                    </MenuItem.Header>
                </MenuItem>
                <!--#endregion-->
            </MenuItem>
            <!--#endregion-->

            <!--#region Global MenuItem-->
            <MenuItem Style="{StaticResource MenuItemWithSubmenu}">
                <MenuItem.Header>
                    <TextBlock Text="Global" Style="{DynamicResource MainTextStyle}"/>
                </MenuItem.Header>
                <!--#region Undo MenuItem-->
                <MenuItem>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding UndoCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <MenuItem.Header>
                        <Grid>
                            <TextBlock Text="Undo" Style="{DynamicResource MainTextStyle}"/>
                            <TextBlock Text="Ctrl+Z" Style="{DynamicResource TipTBStyle}"/>
                        </Grid>
                    </MenuItem.Header>
                </MenuItem>
                <!--#endregion-->
                <!--#region Redo MenuItem-->
                <MenuItem>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding RedoCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <MenuItem.Header>
                        <Grid>
                            <TextBlock Text="Redo" Style="{DynamicResource MainTextStyle}"/>
                            <TextBlock Text="Ctrl+Y" Style="{DynamicResource TipTBStyle}"/>
                        </Grid>
                    </MenuItem.Header>
                </MenuItem>
                <!--#endregion-->
            </MenuItem>
            <!--#endregion-->

        </ContextMenu>
        <!--#endregion-->
        <conv:TypeToImageConverter x:Key="TypeToSourceConverter"/>
        <conv:InverseBoolConverter x:Key="BoolInverse"/>
    </UserControl.Resources>
    <!--#endregion-->
    <Grid x:Name="mainGrid" behav:InputBindingBehavior.PropagateInputBindingsToWindow="True">
        <Grid>
            <!--#region Column Definitions-->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" Name="controlRow"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <!--#endregion-->
            <!--#region BackButton-->
                <Button Height="40" HorizontalAlignment="Stretch" 
                        Content="Back"
                        FontFamily="{StaticResource RegularFont}"
                        Grid.Row="0" Margin="10 10 0 10">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding BackCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource AccentButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSingleRootOpen,
                        UpdateSourceTrigger=PropertyChanged}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSingleRootOpen,
                        UpdateSourceTrigger=PropertyChanged}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <!--#endregion-->
            <!--#region Tree Manipulating Buttons-->
            <Grid HorizontalAlignment="Stretch" SizeChanged="Grid_SizeChanged"
                  Margin="10 0 0 0" Grid.Row="1">
                <!--#region Column Definitions-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Name="firstColumn"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!--#endregion-->
                <!--#region Add child-->
                <Button Height="40"   
                        Content="Add child"
                        HorizontalAlignment="Stretch"
                        FontFamily="{StaticResource RegularFont}"
                        IsEnabled="{Binding IsDefaultState, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding AddChildCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSingleRootOpen,
                        UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Grid.ColumnSpan" Value="3"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSingleRootOpen,
                        UpdateSourceTrigger=PropertyChanged}" Value="False">
                                    <Setter Property="Grid.ColumnSpan" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <!--#endregion-->
                <!--#region Add Parent-->
                <Button Height="40" 
                        Width="Auto"  
                        HorizontalAlignment="Stretch"
                        Content="Add parent"
                        FontFamily="{StaticResource RegularFont}" 
                        Grid.Column="2"
                        Click="AddParent_Btn_Click"
                        IsEnabled="{Binding IsDefaultState, UpdateSourceTrigger=PropertyChanged}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource AccentButtonStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSingleRootOpen,
                        UpdateSourceTrigger=PropertyChanged}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSingleRootOpen,
                        UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <!--#endregion-->
             
            </Grid>
            <!--#endregion-->

            <!--#region CodeTree-->
            <TreeView Name="codeTree" Grid.Row="2" Panel.ZIndex="2"
                      Margin="0 10 0 0" BorderThickness="0" 
                      dd:DragDrop.IsDragSource="True"
                      dd:DragDrop.IsDropTarget="True"
                      dd:DragDrop.DropHandler="{Binding ElementName=mainGrid, Path=DataContext}"
                      AllowDrop="True"
                      DataContext="{Binding Source={x:Static local:App.mainVM}}">
                <TreeView.Resources>
                    <!--#region Data Template-->
                    <HierarchicalDataTemplate DataType="{x:Type model:CodeComponent}" ItemsSource="{Binding Children, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <Image Margin="0,0,5,0" VerticalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="HighQuality"
                                       
                                      Source="{Binding Path=ComponentType, Converter={StaticResource TypeToSourceConverter}, UpdateSourceTrigger=PropertyChanged}">
                                </Image>
                                <TextBox Text="{Binding Label}" FontFamily="{StaticResource RegularFont}"
                                   FontSize="15" VerticalAlignment="Center" Name="nameBox"
                                         Style="{StaticResource TransparentTextBox}"
                                         ui:TextBoxHelper.IsDeleteButtonVisible="False"
                                         IsReadOnly="{Binding Source={x:Reference Name=mainGrid},
                                    Path=DataContext.IsDefaultState, 
                                    Converter={StaticResource BoolInverse}}">
                                </TextBox>
                            </StackPanel>
                        </Grid>
                    </HierarchicalDataTemplate>
                    <!--#endregion-->
                </TreeView.Resources>
                <!--#region TreeView ItemContainerStyle-->
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem"
                          BasedOn="{StaticResource {x:Type TreeViewItem}}">
                        <EventSetter Event="PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                        <EventSetter Event="Selected" Handler="TreeViewItem_Selected"/>
                        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="TreeItemPreviewMouseLeftButtonDown"/>
                        <Setter Property="ContextMenu" Value="{DynamicResource TreeItemContextMenu}"/>
                        <Setter Property="IsSelected" Value="{Binding IsOpened, UpdateSourceTrigger=PropertyChanged}"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                <!--#endregion-->
            </TreeView>
            <!--#endregion-->
        </Grid>

        <!--#region InputBindings-->
        <Grid.InputBindings>
            <KeyBinding Key="F2" Command="{Binding RenameCommand}"/>
            <KeyBinding Key="Esc" Command="{Binding BackCommand}"/>
            <KeyBinding Key="Delete" Command="{Binding DeleteCommand}"/>
            <KeyBinding Key="Down" Command="{Binding SelectNextCommand}"/>
            <KeyBinding Key="Up" Command="{Binding SelectPrevCommand}"/>
            <KeyBinding CommandTarget="{Binding ElementName=CodeTreeControl}" Modifiers="Ctrl" Key="N" Command="{Binding AddChildCommand}"/>
            <KeyBinding CommandTarget="{Binding ElementName=CodeTreeControl}" Modifiers="Ctrl" Key="C" Command="{Binding CopyCommand}"/>
            <KeyBinding CommandTarget="{Binding ElementName=CodeTreeControl}" Modifiers="Ctrl" Key="V" Command="{Binding PasteCommand}"/>
            <KeyBinding CommandTarget="{Binding ElementName=CodeTreeControl}" Modifiers="Ctrl" Key="X" Command="{Binding CutCommand}"/>
            <KeyBinding CommandTarget="{Binding ElementName=CodeTreeControl}" Modifiers="Ctrl" Key="O" Command="{Binding OpenAsRootCommand}"/>
            <KeyBinding CommandTarget="{Binding ElementName=CodeTreeControl}" Modifiers="Ctrl" Key="R" Command="{Binding UpdateRelationshipCommand}"/>
            <KeyBinding CommandTarget="{Binding ElementName=CodeTreeControl}" Modifiers="Ctrl" Key="Z" Command="{Binding UndoCommand}"/>
            <KeyBinding CommandTarget="{Binding ElementName=CodeTreeControl}" Modifiers="Ctrl" Key="Y" Command="{Binding RedoCommand}"/>
            <KeyBinding CommandTarget="{Binding ElementName=CodeTreeControl}" Key="Esc" Command="{Binding CancelRelationshipModeCommand}"/>
        </Grid.InputBindings>
        <!--#endregion-->
    </Grid>
</controls:BaseUserControl>
